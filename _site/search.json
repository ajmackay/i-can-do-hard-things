[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Series\n\nWoRkflow Tips: Ways to streamline your R workflow.\n\n\nGgplot2 series: Everything I know about ggplot2.\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nText Pre-Processing\n\n\n\n\n\n\n\nNLP\n\n\n\n\n\n\n\n\n\n\n\nMar 26, 2024\n\n\n\n\n\n\n\n\nNLP Outline\n\n\n\n\n\n\n\nNLP\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nIntroduction to the Series\n\n\n\n\n\n\n\nworkflow\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nStructuring your R Project\n\n\n\n\n\n\n\nworkflow\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nCopying Windows File Paths\n\n\n\n\n\n\n\nworkflow\n\n\n\n\n\n\n\n\n\n\n\nJan 12, 2024\n\n\n\n\n\n\n\n\nNamed Lists from Group Maps\n\n\n\n\n\n\n\niteration\n\n\npurrr\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nDec 12, 2023\n\n\n\n\n\n\n\n\nAccurately Viewing and Saving Plots using Camcorder\n\n\n\n\n\n\n\nggplot2\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2023\n\n\n\n\n\n\n\n\nSuper Helpful Very Little Tips and Tricks\n\n\n\n\n\n\n\nggplot\n\n\ndataviz\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\nggplot\n\n\ndataviz\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nHighlighting In ggplot\n\n\n\n\n\n\n\nggplot\n\n\ndataviz\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\nggplot\n\n\ndataviz\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nWoRkflow\n\n\n\n\n\n\n\nworkflow\n\n\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 27, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Figuring it Out by Aaron",
    "section": "",
    "text": "These are some things I know about R and Data Science - test"
  },
  {
    "objectID": "posts/r-workflow/index.html",
    "href": "posts/r-workflow/index.html",
    "title": "WoRkflow",
    "section": "",
    "text": "Getting the right workflow in R is hard.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Quickly highlighting ggplot columns/post.html",
    "href": "posts/Quickly highlighting ggplot columns/post.html",
    "title": "Highlighting In ggplot",
    "section": "",
    "text": "Highlighting specific columns in ggplot is a useful\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Quarto Tips/index.html",
    "href": "posts/Quarto Tips/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Use knitr::opts_chunk$set(echo = , warning = , message = ) to set a default chunk option\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Capturing Warnings/index.html",
    "href": "posts/Capturing Warnings/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Capturing Warnings is like super useful and stuff.\n\nwithCallingHandlers()\ntryCatch()\n\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Cumulative vs Per Period Plots/index.html",
    "href": "posts/Cumulative vs Per Period Plots/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "When would you use a cumulative plot vs a per period one (hint, cumulative plots tend to be better for spotting trends etc.)\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Quickest way to add text to ggplot/index.html",
    "href": "posts/Quickest way to add text to ggplot/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Super Helpful Very Little Tips and Tricks/post.html",
    "href": "posts/Super Helpful Very Little Tips and Tricks/post.html",
    "title": "Super Helpful Very Little Tips and Tricks",
    "section": "",
    "text": "Paste Windows File Directory\nSomething about how annoying the backslashes are etc.\n\nreadClipboard() %&gt;% str_replace_all(\"\\\\\\\\\", \"/\")\n\n [1] \"2021\\t 143,032 \\t 243,176 \" \"2022\\t 148,153 \\t 249,769 \"\n [3] \"2023\\t 152,999 \\t 256,275 \" \"2024\\t 158,001 \\t 263,121 \"\n [5] \"2025\\t 163,048 \\t 270,302 \" \"2026\\t 168,403 \\t 278,048 \"\n [7] \"2027\\t 174,322 \\t 286,863 \" \"2028\\t 179,888 \\t 295,495 \"\n [9] \"2029\\t 185,526 \\t 304,526 \" \"2030\\t 191,171 \\t 313,759 \"\n[11] \"2031\\t 197,013 \\t 323,327 \" \"2032\\t 203,332 \\t 333,890 \"\n[13] \"2033\\t 209,004 \\t 343,690 \" \"2034\\t 214,549 \\t 353,594 \"\n[15] \"2035\\t 219,854 \\t 363,321 \" \"2036\\t 225,278 \\t 373,119 \"\n[17] \"2037\\t 231,106 \\t 384,012 \" \"2038\\t 236,280 \\t 393,893 \"\n[19] \"2039\\t 240,905 \\t 402,916 \" \"2040\\t 245,281 \\t 411,606 \"\n\npaste.path = function() {\n  raw_dir &lt;- readClipboard()\n\n  if(is.null(raw_dir)) {\n    stop(\"Oops, your clipboard appears to be empty\")\n  }\n\n  if(!str_detect(raw_dir, \"\\\\\\\\\")) {\n    stop(stringr::str_glue(\"Hmm it seems you haven't provided a windows file directory path: \\n{format(raw_dir)}\"))\n  }\n\n  str_replace_all(raw_dir, \"\\\\\\\\\", \"/\")\n}"
  },
  {
    "objectID": "ggplot-series.html",
    "href": "ggplot-series.html",
    "title": "Series: Everything I know about ggplot2",
    "section": "",
    "text": "Accurately Viewing and Saving Plots using Camcorder\n\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nHighlighting In ggplot\n\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\n\n\n\nAug 27, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ggplot2/Quickly highlighting ggplot columns/post.html",
    "href": "posts/ggplot2/Quickly highlighting ggplot columns/post.html",
    "title": "Highlighting In ggplot",
    "section": "",
    "text": "Highlighting specific columns in ggplot is a useful\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/ggplot2/Accurately Viewing and Saving Plots with Camcorder/index.html",
    "href": "posts/ggplot2/Accurately Viewing and Saving Plots with Camcorder/index.html",
    "title": "Accurately Viewing and Saving Plots using Camcorder",
    "section": "",
    "text": "Something I have always struggled with ggplot is after I have spent how many hours tinkering and finessing a plot, I will export it\nTHIS IS A TEST"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "Text Pre-Processing\n\n\n\n\n\n\n\n\n\nMar 26, 2024\n\n\n\n\n\n\n\n\nNLP Outline\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nIntroduction to the Series\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nStructuring your R Project\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nCopying Windows File Paths\n\n\n\n\n\n\n\n\n\nJan 12, 2024\n\n\n\n\n\n\n\n\nNamed Lists from Group Maps\n\n\n\n\n\n\n\n\n\nDec 12, 2023\n\n\n\n\n\n\n\n\nAccurately Viewing and Saving Plots using Camcorder\n\n\n\n\n\n\n\n\n\nNov 12, 2023\n\n\n\n\n\n\n\n\nSuper Helpful Very Little Tips and Tricks\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nHighlighting In ggplot\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nCreating a ggplot2 theme\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nWoRkflow\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nAug 27, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ggplot2/Quickest way to add text to ggplot/index.html",
    "href": "posts/ggplot2/Quickest way to add text to ggplot/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Group Map Named List/index.html",
    "href": "posts/Group Map Named List/index.html",
    "title": "Named Lists from Group Maps",
    "section": "",
    "text": "The group_map() function is one of my favourite iterative functions within the purrr package. Like the other iterative functions within the purrr-verse, it has been designed to be simple and intuitive.\nIn a nutshell, group_map() applies a function over each group of a grouped dataframe and returns a list containing the function result per group. This is great when we want to…well apply a function on a per group basis.\nAs a quick example, say we want to run a regression to pedict petal length with petal width for each class of species using data in the iris dataset. A group_map() will allow you to do this, and save the outcome in one object so that you can quickly access each regression outcome.\n\nlibrary(dplyr)\nlibrary(purrr)\n\niris_df &lt;- datasets::iris %&gt;% as_tibble()\n\nlm_formula &lt;- formula(\"Petal.Length ~ Petal.Width\")\n\nlm_results &lt;- iris_df %&gt;% \n  group_by(Species) %&gt;% \n  group_map(function(dat, group) {\n    lm(lm_formula, data = dat)\n  })\n\nAnd now we can quickly access our lm results by calling lm_results. Combining this with broom’s tidy in a map() means you can quickly see the key results of each regression.\n\nmap(lm_results, broom::tidy)\n\n[[1]]\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)    1.33     0.0600     22.1  7.68e-27\n2 Petal.Width    0.546    0.224       2.44 1.86e- 2\n\n[[2]]\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     1.78     0.284      6.28 9.48e- 8\n2 Petal.Width     1.87     0.212      8.83 1.27e-11\n\n[[3]]\n# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)    4.24      0.561      7.56 0.00000000104\n2 Petal.Width    0.647     0.275      2.36 0.0225       \n\n\nHere you may notice the key issue for which this week’s blog post is designed to address: How can you tell which result corresponds to which group?\nThe solution is reasonably simple: Create a list that contains the lm object and set the element names of the list to be the current group.\n\nlm_results &lt;- iris_df %&gt;% \n  group_by(Species) %&gt;% \n  group_map(function(dat, group) {\n    model &lt;- lm(lm_formula, data = dat)\n    \n    # Place the lm model into a list and set the name to be the current group\n    list(model) %&gt;% \n      setNames(group$Species)\n  })\n\nlm_results\n\n[[1]]\n[[1]]$setosa\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n     1.3276       0.5465  \n\n\n\n[[2]]\n[[2]]$versicolor\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n      1.781        1.869  \n\n\n\n[[3]]\n[[3]]$virginica\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n     4.2407       0.6473  \n\n\nAnd now you can see which lm model corresponds to which species group. However what this has done is added each named list element to the list that is created by group_map(). So while we can see in our output which element of lm_results contains which lm model, we cannot easily access these elements with the $ operator, nor can we quickly iterate over each element like we could do previously.\nThankfully, the solution again is simple: if we use flatten() on our group_map() result, it will remove the nested layers that have in our list and put all the elements in one single layer.\n\nlm_results &lt;- flatten(lm_results)\n\nlm_results\n\n$setosa\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n     1.3276       0.5465  \n\n\n$versicolor\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n      1.781        1.869  \n\n\n$virginica\n\nCall:\nlm(formula = lm_formula, data = dat)\n\nCoefficients:\n(Intercept)  Petal.Width  \n     4.2407       0.6473  \n\n\nAnd now we all of our regression results packaged neatly into one, with each element clearly labelled as so:"
  },
  {
    "objectID": "posts/ggplot2/Setting up a ggplot2 theme/post.html",
    "href": "posts/ggplot2/Setting up a ggplot2 theme/post.html",
    "title": "Creating a ggplot2 theme",
    "section": "",
    "text": "Creating a ggplot2 theme is a cool thing to do."
  },
  {
    "objectID": "posts/ggplot2/Adding Summary Statistics/post.html",
    "href": "posts/ggplot2/Adding Summary Statistics/post.html",
    "title": "Creating a ggplot2 theme",
    "section": "",
    "text": "if(FALSE) {\n\"https://stackoverflow.com/questions/15720545/use-stat-summary-to-annotate-plot-with-number-of-observations\"\n  \n}"
  },
  {
    "objectID": "series/ggplot-series.html",
    "href": "series/ggplot-series.html",
    "title": "Series: Everything I know about ggplot2",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/workflow/your first r package/first-package.html",
    "href": "posts/workflow/your first r package/first-package.html",
    "title": "What to do with your First R Package",
    "section": "",
    "text": "This is a test"
  },
  {
    "objectID": "series/workflow-series.html",
    "href": "series/workflow-series.html",
    "title": "Series: WoRkflow",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "workflow-series.html",
    "href": "workflow-series.html",
    "title": "Series: WoRkflow",
    "section": "",
    "text": "Introduction to the Series\n\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\n\n\nStructuring your R Project\n\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/workflow/intro to series/intro.html",
    "href": "posts/workflow/intro to series/intro.html",
    "title": "Introduction to the Series",
    "section": "",
    "text": "This series will focus on my thoughts and methods around structuring R studio projects with little side-quests on things like working with git and documentation.\nIn the five or so years that I have been using R, I have found there to be a surprising lack of resources on this topic (though two resources I have found helpful are this post by David Keyes - notably his take on how to write a README file, and this in depth guide on Reproducible Data Analysis and Reporting by Frank E Harrell Jr) and so I thought I would share what I have learnt (and am still learning!) along my R journey.\nThis series will likely be a perpetual work-in-progress as I continue to learn and refine my approach and I am very much open to feedback on improving the workflow presented here.\nIn brief, some of the topics I expect to cover in the coming weeks include:\n\nSetting up a project template\nHousing the project template in a package to be called when you want to start a new project\nA bit on Renv and reproducible environments\nA bit on saving and loading objects with qs"
  },
  {
    "objectID": "posts/NLP/Outline/outline.html",
    "href": "posts/NLP/Outline/outline.html",
    "title": "NLP OUtline",
    "section": "",
    "text": "Rather than try and “learn everything I can” about Natural Language Processing, I figured the better method would be to first outline my goals in learning NLP. From here, I can design a program that will enable me to achieve these goals as efficiently as possible.\nIn short then, my main goal for learning NLP is to be able to extract key themes from a collection of documents (known in NLP-speak as a “corpus”). I want to be able to input a corpus into a model, which will then identify and extract themes or topics, both across the corpus as a whole and within documents in the corpus. These themes should be quantified in terms of their importance.\nA quick bit of research has indicated that Topic Modeling is the technique that I need to become familiar with.\nTopic modeling is a statistical model that identifies the unique themes (or “topics”) that are present in a collection of documents. These topics are identified and their importance quantified by the number of similar words that pertain to that topic in a document. The end result is an extraction of the topics in a corpus as well as the balance of topic’s within each document.\nTo understand and utilise topic modeling, there are number of pre-requisite skills that I will need to understand first."
  },
  {
    "objectID": "posts/NLP/Outline/outline.html#text-pre-processing",
    "href": "posts/NLP/Outline/outline.html#text-pre-processing",
    "title": "NLP OUtline",
    "section": "Text Pre-Processing",
    "text": "Text Pre-Processing\nClean and pre-process text data to remove noise, irrelevant information and standardise the format for further processing and analysis.\nLearning Outcomes:\n\nTokenisation\nStopword removal\nStemming\nLemmatisation"
  },
  {
    "objectID": "posts/NLP/Outline/outline.html#text-representation",
    "href": "posts/NLP/Outline/outline.html#text-representation",
    "title": "NLP OUtline",
    "section": "Text Representation",
    "text": "Text Representation\n[Text here]\nLearning Outcomes:\n\nBad-of-words model\nTerm Frequency - Inverse Document Frequency (TF-IDF)\nWord embeddings (word2vec, GloVe)\nContextual embeddings (BERT, GPT)"
  },
  {
    "objectID": "posts/NLP/Outline/outline.html#topic-modeling",
    "href": "posts/NLP/Outline/outline.html#topic-modeling",
    "title": "NLP OUtline",
    "section": "Topic Modeling",
    "text": "Topic Modeling\nIdentify themes or topics present in a collection of documents\nLearning Outcomes:\n\nLatent Dirichlet Allocation (LDA)\n\n\nTopic Modeling\nLearning Outcomes: Identify and extract the underlying themes or topics present in a corpus."
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html",
    "title": "Text Pre-Processing",
    "section": "",
    "text": "library(DiagrammeR)\n#| echo: false\ngrViz(\"\n  digraph {\n  layout = dot\n  node [shape = rectangle,style=filled,fixedsize=False]\n  edge[color=grey,arrowhead=vee]\n  A[label = 'Corpus']\n  B[label = 'Pre-Processing']\n  C[label = 'Tokenisation']\n  D[label = 'Stop Word Removal']\n  E[label = 'Stemming/Lemmatisation']\n\n  A-&gt;B\n  B-&gt;C\n  B-&gt;D\n  B-&gt;E\n\n\n  }\n   \")\nText (like all real-world data) comes in a messy format. Whether that text be a collection of blog posts, newspaper articles, a book and so on, the text must be prepared and organised in a format that will make it more efficient to apply further techniques to it.\nIn pre-processing text, there are a few key steps including:"
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html#load-packages-and-data",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html#load-packages-and-data",
    "title": "Text Pre-Processing",
    "section": "Load Packages and Data",
    "text": "Load Packages and Data\nMuch of our pre-processing can be completed with the tidytext package.\n\nlibrary(tidytext)\nlibrary(scriptuRs)"
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html#text-pre-processing",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html#text-pre-processing",
    "title": "Text Pre-Processing",
    "section": "Text Pre-Processing",
    "text": "Text Pre-Processing\nClean and pre-process text data to remove noise, irrelevant information and standardise the format for further processing and analysis.\nLearning Outcomes:\n\nTokenisation\nStopword removal\nStemming\nLemmatisation"
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html#text-representation",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html#text-representation",
    "title": "Text Pre-Processing",
    "section": "Text Representation",
    "text": "Text Representation\n[Text here]\nLearning Outcomes:\n\nBad-of-words model\nTerm Frequency - Inverse Document Frequency (TF-IDF)\nWord embeddings (word2vec, GloVe)\nContextual embeddings (BERT, GPT)"
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html#topic-modeling",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html#topic-modeling",
    "title": "Text Pre-Processing",
    "section": "Topic Modeling",
    "text": "Topic Modeling\nIdentify themes or topics present in a collection of documents\nLearning Outcomes:\n\nLatent Dirichlet Allocation (LDA)\n\n\nTopic Modeling\nLearning Outcomes: Identify and extract the underlying themes or topics present in a corpus."
  },
  {
    "objectID": "posts/NLP/Text Pre-Processing/text_pre-processing.html#footnotes",
    "href": "posts/NLP/Text Pre-Processing/text_pre-processing.html#footnotes",
    "title": "Text Pre-Processing",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nA token is the smallest attribute that you are interested in (e.g., characters, words, sentences)↩︎"
  }
]